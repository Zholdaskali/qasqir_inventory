Приложение дает платформу для учета небольших складов организаций



---------------------------------------------- Готовый Функционал ----------------------------------------------
Супер Админ
{
    б) Добавление админа организации                                    +
    д) Скачивать логи по периодам                                       +
    c) Все возможности других ролей                                     +
}

Админ
{
    а) все возможности сотрудника                                       +
    б) Добавление сотрудников -> Инвайт логикасы                        +
    в) Инвайт сотрудников -> Проверка -> доступ к изменению пароля      +
    г) Менять сотрудника на админа                                      +
    д) Менять имя организации                                           -
}

Сотрудник
{
    a) Доступ к профиль                                                 +
    б) Менять свои данные                                               +
    в) Подтверждение Email                                              +
}


---------------------------------- Перехватчики (Interceptors) запросов -> перехватывает все запросы кроме (Определенных) ---------------------------------

1. Система контроля проверки сессии по токену (AuthInterceptor)
{
    а) проверка наличия сессии,
    б) проверка срока сессии
}

2. Система контроля проверки прав (входит в AuthInterceptor)
{
    а) проверка прав на уровне эндпоинтов
}

3. Система логирования (ActionLogInterceptor)
{
    а) Логирование активностей
    б) Логирование логина
    в) Логирование ошибок сервера
}

---------------------------------------------- Эндпоинты ----------------------------------------------
/user-controller
    /api/v1/user/profile                                - GET после входа вызывается
    /api/v1/user/profile                                - PUT изменение настроек
    /api/v1/user/password-reset                         - PUT изменение пароля
    /api/v1/user/email/verification-code                - POST  // Генерация кода верификации
    /api/v1/user/email/verify                           - POST  // Подтверждение кода

/admin-controller
    /api/v1/admin/employee                              - POST  // добавление сотрудника
    /api/v1/admin/employee/{userId}/role                - PUT  // изменение роли сотрудника
    /api/v1/admin/employee/{userId}                     - DELETE  // удаление сотрудника
    /api/v1/admin/invite                                - POST  // приглашение сотрудника

/super-admin-controller
    /api/v1/super-admin/log/action-logs                 - GET // скачивание логов активности пользователей на сервере
    /api/v1/super-admin/log/exception-logs              - GET // скачивание логов обработки ошибок на сервере
    /api/v1/super-admin/log/login-logs                  - GET // скачивание логов входа в систему на сервере

/auth-controller
    /api/v1/auth/sign-in                                - POST //вход в систему
    /api/v1/auth/sign-out                               - POST //выход из системы


---------------------------------------------- Сервисы ----------------------------------------------
ActionLogService
AuthenticationService
ExceptionLogService
InviteService
LogFileService
LoginLogService
MailService
MailVerificationService
PasswordResetService
ProfileService
RoleService
SessionService
UserService







---------------------------------------------- будут добавлены (примерно) ----------------------------------------------> После предоставления ТЗ

контроллеры
/employee-controller
    /api/v1/employee/warehouse/stock - GET  // Просмотр склада
    /api/v1/employee/warehouse/move - POST  // Перемещение товара

/admin-controller
    /api/v1/admin/warehouse/add-product - POST  // Добавление товара
    /api/v1/admin/warehouse/remove-product - DELETE  // Удаление товара
    /api/v1/admin/warehouse/update-stock - PUT  // Обновление остатков


Сервисы
WarehouseService   // Управление складом: добавление товара, изменение остатков
InventoryService   // Логика инвентаризации, например, расчет текущего запаса
ProductService     // Логика работы с конкретными товарами

так же нужно учитывать сроки эксплуатации.

точка отсчета инвентаризация

Приходная накладная -> движение  ->  Расходная накладная

1С регистры на каждый запись

Упаков и внутри количество

Может приход быть Тара

Возврат тары номерная тара



С какого момента система должна фиксировать состояние или движение товара? -> С поступления (инвентаризация)
Какие процессы делаются когда идет поступление товара и до склада? ->
Описать сущности для БД какие поля я должен учитывать ->



Вархаус админ управляет структурой склада внутрь склада



t_users — сначала создаём таблицу пользователей.
t_warehouses — таблица складов, так как она не зависит от других.
t_warehouse_zones — зоны на складах, которые ссылаются на склад.
t_categories — категории товаров, не зависят от других таблиц.
t_nomenclature — товары, которые ссылаются на категории.
t_suppliers — поставщики, не зависят от других таблиц.
t_customers — покупатели, не зависят от других таблиц.
t_documents — документы, которые ссылаются на поставщиков и покупателей.
t_inventory — инвентаризация, ссылается на товары и зоны склада.
t_transactions — транзакции, ссылаются на документы и товары.
t_returns — возвраты, ссылаются на товары и документы.
t_warehouse_containers — контейнеры, ссылаются на зоны склада.

вывести в дашбоард статистику сезона и месяца и года средние по товарам.

1) Как происходит реализация товара к примеру, в первом инвентаризации (Приход) пришло (test -> товар) = 15 штук в n склад во второй (test -> товар) = 10 штук в m склад и на реализацию запрашивается 10 штук мы откуда это берем.

2) В базе сохраняется ли айди транзакции или сделки и статус сделки, потом как происходит возврат если к примеру предположим что статус уже true то есть сделка успешна и может ли запрос на возврат есть ли какой нибудь срок или подтверждение состояния сделки.

Обьяснение Тары -> {
В реальности процесс действительно проще:

Кладовщик/приемщик физически проверяет товар и тару
Сверяет с накладной
Вручную вносит в систему только те данные, которые нужны для учета

То есть:

Не нужно программно отслеживать тару - это делают люди при приемке
Не нужно усложнять систему дополнительными сущностями для тары
Достаточно существующего функционала учета прихода/расхода товара
это хороший пример того, как иногда мы пытаемся автоматизировать то, что лучше оставить на ручной контроль.
}



Приход товара по накладной
Реализовано в processIncomingGoods()

Принимает DocumentDTO с items
Обновляет количество вInventory
Создает транзакцию типа "INCOMING"


Приход товара (ИМПОРТ) с ГТД
Реализовано в processImport()

Проверяет наличие TNVED кода
Проверяет тип документа "IMPORT"
Использует processIncomingGoods для обработки


Возврат товаров поставщику при браке
Реализовано в processReturn()

Создает запись о возврате
Обновляет количество в инвентаризации
Сохраняет причину возврата
Связывает с изначальным документом


Реализация покупателю
Реализовано в processSales()

Проверяет достаточность товара
Уменьшает количество в инвентаризации
Создает транзакцию типа "OUTGOING"


Возврат от покупателя
Реализовано через тот же processReturn()

Поддерживает разные типы возврата через ReturnType
Может обрабатывать возврат как от поставщика, так и от покупателя


Передача в производство
Реализовано в processProductionTransfer()

Создает транзакцию типа "PRODUCTION"
Уменьшает количество на складе